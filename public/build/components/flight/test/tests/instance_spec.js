provide(function(t){using("lib/component","lib/registry",function(e,n){function i(){this.testVal=69,this.after("initialize",function(){o=o||"",o+="-initTestMixin1-"}.bind(this))}function r(t){this.testArray=[24,79],this.testFunction=function(){return t},this.after("initialize",function(){o=o||"",o+="-initTestMixin2-"})}var o="",s=function(){function t(){this.after("initialize",function(){o=o||"",o+="-initBase-"})}return e(t,i,r)}(),a=e();describe("(Core) instance",function(){beforeEach(function(){window.outerDiv=document.createElement("div"),window.innerDiv=document.createElement("div"),window.outerDiv.className=window.innerDiv.className="test-node",window.outerDiv.appendChild(window.innerDiv),document.body.appendChild(window.outerDiv)}),afterEach(function(){document.body.removeChild(window.outerDiv),window.outerDiv=null,window.innerDiv=null,s.teardownAll(),a.teardownAll()}),it("should reference supplied node in new instance",function(){var t=new s(window.outerDiv);expect(t.node).toBe(window.outerDiv)}),it("should throw an exception if .on is given an invalid callback",function(){function t(){}var e=new s(window.outerDiv);expect(function(){e.on("click",t)}).not.toThrow(),expect(function(){e.on("click",undefinedCallback)}).toThrow()}),it("should create instances for each element matching the given selector",function(){var t=n.findComponentInfo(s),e=t?t.instances.length:0;s.attachTo(".test-node");var i=n.findComponentInfo(s).instances.length;expect(i).toBe(e+2)}),it("references expected nodes when we attach to div",function(){s.attachTo(".test-node"),expect(n.findInstanceInfo(window.outerDiv)).toBeTruthy(),expect(n.findInstanceInfo(window.innerDiv)).toBeTruthy()}),it("calls initializers in the correct order",function(){o="",new s(window.outerDiv),expect(o).toBe("-initBase--initTestMixin1--initTestMixin2-")}),describe("multiple instances",function(){it("should throw an error if multiple instances of the same Component are attached to the same DOM node",function(){expect(function(){s.attachTo("body"),s.attachTo("body")}).toThrow()}),it("should not throw an error if multiple instances of the same Component are attached to different nodes",function(){expect(function(){s.attachTo("body"),s.attachTo(document)}).not.toThrow()}),it("should not throw an error if instances of different Components are attached to the same node",function(){expect(function(){s.attachTo("body"),a.attachTo("body")}).not.toThrow()})})}),t(1)})});