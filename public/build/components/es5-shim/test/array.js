describe("Array.isArray ( arg )",function(){it("should be defined",function(){assert(Array).should(respondTo,"isArray")}),it('should return true if argument is an object whose class internal prperty is "Array"',function(){assert(Array.isArray([])).should(be),assert(Array.isArray([1,2,3])).should(be),assert(Array.isArray("")).shouldNot(be),assert(Array.isArray(1)).shouldNot(be),assert(Array.isArray(!0)).shouldNot(be),assert(Array.isArray(!1)).shouldNot(be)})}),describe("Array.prototype.forEach ( callbackFn [ , thisArg ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"forEach")}),it("should pass three arguments: the value of the element, the index of the element, and the Array object being traversed",function(){var t=[42];t.forEach(function(e,n,o){assert(e).should(eql,42),assert(n).should(eql,0),assert(o).should(eql,t)})}),it("should executes the provided function (callback) once for each element present in the array",function(){var t=[];[2,3,4].forEach(function(e){t.push(e-1)}),assert(t).should(beSimilarTo,[1,2,3])})}),describe("Array.prototype.map ( callbackFn [ , thisArg ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"map")}),it("should pass three arguments: the value of the element, the index of the element, and the Array object being traversed",function(){var t=[42];t.map(function(e,n,o){assert(e).should(eql,42),assert(n).should(eql,0),assert(o).should(eql,t)})}),it("should create a new array with the results of calling a provided function on every element in this array",function(){var t=[2,3,4].map(function(t){return t-1});assert(t).should(beSimilarTo,[1,2,3])})}),describe("Array.prototype.filter ( callbackFn [ , thisArg ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"filter")}),it("should pass three arguments: the value of the element, the index of the element, and the Array object being traversed",function(){var t=[42];t.filter(function(e,n,o){assert(e).should(eql,42),assert(n).should(eql,0),assert(o).should(eql,t)})}),it("should create a new array with all elements that pass the test implemented by the provided function",function(){var t=[2,3,4].filter(function(t){return t>3});assert(t).should(beSimilarTo,[4])})}),describe("Array.prototype.every ( callbackFn [ , thisArg ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"every")}),it("should pass three arguments: the value of the element, the index of the element, and the Array object being traversed",function(){var t=[42];t.every(function(e,n,o){assert(e).should(eql,42),assert(n).should(eql,0),assert(o).should(eql,t)})}),it("should tests whether all elements in the array pass the test implemented by the provided function",function(){var t=function(t){return t>5};assert([6,7,8,9].every(t)).should(be),assert([3,4,5,6].every(t)).shouldNot(be)})}),describe("Array.prototype.some ( callbackFn [ , thisArg ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"some")}),it("should pass three arguments: the value of the element, the index of the element, and the Array object being traversed",function(){var t=[42];t.some(function(e,n,o){assert(e).should(eql,42),assert(n).should(eql,0),assert(o).should(eql,t)})}),it("should return true if some element in the array passes the test implemented by the provided function",function(){var t=function(t){return t>5};assert([1,2,3,9].some(t)).should(be),assert([1,2,3,4].some(t)).shouldNot(be)})}),describe("Array.prototype.reduce ( callbackFn [ , initialValue ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"reduce")}),it("should pass four arguments: the previous value (or value from the previous call to callbackFn), the current value, the current index, and the Array object being traversed",function(){var t=[41,42];t.reduce(function(e,n,o,i){assert(e).should(eql,41),assert(n).should(eql,42),assert(o).should(eql,1),assert(i).should(eql,t)})}),it("should set default value to 0",function(){[42].reduce(function(t){assert(t).should(eql,0)})}),it("should accept default value",function(){[42].reduce(function(t){assert(t).should(eql,24)},24)}),it("should apply a function against an accumulator and each value of the array (from left-to-right) as to reduce it to a single value",function(){var t=[0,1,2,3].reduce(function(t,e){return t+e});assert(t).should(eql,6)})}),describe("Array.prototype.reduceRight ( callbackFn [ , initialValue ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"reduceRight")}),it("should pass four arguments: the previous value (or value from the previous call to callbackFn), the current value, the current index, and the Array object being traversed",function(){var t=[41,42];t.reduceRight(function(e,n,o,i){assert(e).should(eql,42),assert(n).should(eql,41),assert(o).should(eql,0),assert(i).should(eql,t)})}),it("should set default value to 0",function(){[42].reduceRight(function(t){assert(t).should(eql,0)})}),it("should accept default value",function(){[42].reduceRight(function(t){assert(t).should(eql,24)},24)}),it("should apply a function simultaneously against two values of the array (from right-to-left) as to reduce it to a single value",function(){var t=[0,1,2,3].reduceRight(function(t,e){return t+e});assert(t).should(eql,6)})}),describe("Array.prototype.indexOf ( searchElement [ , fromIndex ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"indexOf")}),it("should return the first index at which a given element can be found in the array, or -1 if it is not present",function(){var t=[1,1,2,3,3,4];assert(t.indexOf(1)).should(eql,0),assert(t.indexOf(4)).should(eql,5),assert(t.indexOf(9)).should(eql,-1)}),it("should search from passed index",function(){var t=[1,1,2,3,3,4];assert(t.indexOf(3,4)).should(eql,4),assert(t.indexOf(1,0)).should(eql,0)})}),describe("Array.prototype.lastIndexOf ( searchElement [ , fromIndex ] )",function(){it("should be defined",function(){assert([]).should(respondTo,"lastIndexOf")}),it("should return the first index at which a given element can be found in the array, or -1 if it is not present",function(){var t=[1,1,2,3,3,4];assert(t.lastIndexOf(1)).should(eql,1),assert(t.lastIndexOf(4)).should(eql,5),assert(t.lastIndexOf(9)).should(eql,-1)}),it("should search from passed index",function(){var t=[1,1,2,3,3,4];assert(t.lastIndexOf(3,4)).should(eql,4),assert(t.lastIndexOf(1,0)).should(eql,0)})});